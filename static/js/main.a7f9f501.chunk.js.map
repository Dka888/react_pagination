{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","numberOfPages","Math","ceil","firstPage","lastPage","pageNaming","className","onClick","map","page","App","useState","setCurrentPage","setPerPage","startingItem","items","length","id","onChange","event","Number","target","value","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"iMAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAAa,SAAC,GAEH,IADtBC,EACqB,EADrBA,MAAOC,EACc,EADdA,QAASC,EACK,EADLA,YAAaC,EACR,EADQA,aAEvBC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAA4B,IAAhBL,EACZM,EAAWN,IAAgBE,EAC3BK,EAAU,iBAAaP,EAAb,oBAAoCD,GAEpD,OACE,qBAAIS,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAAeH,GAAa,YAAzC,SACE,cAAC,IAAD,CACE,UAAQ,WACRG,UAAU,YACVf,GAAIc,EACJE,QAAS,kBAAMR,EAAaD,EAAc,IAJ5C,oBASDT,EAAW,EAAGW,GAAeQ,KAAI,SAAAC,GAAI,OACpC,oBAAIH,UAAS,oBAAeR,IAAgBW,GAAQ,UAApD,SACE,cAAC,IAAD,CACElB,GAAIc,EACJE,QAAS,kBAAMR,EAAaU,IAC5B,UAAQ,WACRH,UAAU,YAJZ,SAMGG,SAKP,oBAAIH,UAAS,oBAAeF,GAAY,YAAxC,SACE,cAAC,IAAD,CACE,UAAQ,WACRE,UAAU,YACVf,GAAIc,EACJ,gBAAeD,EACfG,QAAS,kBAAMR,EAAaD,EAAc,IAL5C,wBCvCKY,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOb,EAAP,KAAoBc,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOd,EAAP,KAAgBgB,EAAhB,KAGMC,EAAehB,EAAcD,EAAUA,EAAU,EAKjDkB,EAAQ1B,EAAWyB,EAJNA,EAAejB,EAAU,EAF9B,MAIViB,EAAejB,EAAU,GAS7B,OACE,sBAAKS,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCiB,EAAM,GADvC,cAC+CA,EAAMA,EAAMC,OAAS,GADpE,eAjBU,GAiBV,OAIA,sBAAKV,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRW,GAAG,kBACHX,UAAU,eACVY,SAnBY,SAACC,GACrBN,EAAWO,OAAOD,EAAME,OAAOC,QAC/BV,EAAe,IAkBPU,MAAOzB,EALT,UAOE,wBAAQyB,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBjB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEV,MA1CQ,GA2CRC,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACU,GACbG,EAAeH,MAGnB,6BACGM,EAAMP,KAAI,SAAAgB,GAAI,OAAI,oBAAI,UAAQ,OAAZ,wBAAuCA,IAAfA,YCvDnDC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MACSC,SAASC,eAAe,W","file":"static/js/main.a7f9f501.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import { Link } from 'react-router-dom';\nimport { getNumbers } from '../../utils';\n\ninterface PropsPagination {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination = ({\n  total, perPage, currentPage, onPageChange,\n}: PropsPagination) => {\n  const numberOfPages = Math.ceil(total / perPage);\n  const firstPage = currentPage === 1;\n  const lastPage = currentPage === numberOfPages;\n  const pageNaming = `/?page=${currentPage}&perPage=${perPage}`;\n\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${firstPage && 'disabled'}`}>\n        <Link\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          to={pageNaming}\n          onClick={() => onPageChange(currentPage - 1)}\n        >\n          «\n        </Link>\n      </li>\n      {getNumbers(1, numberOfPages).map(page => (\n        <li className={`page-item ${currentPage === page && 'active'}`}>\n          <Link\n            to={pageNaming}\n            onClick={() => onPageChange(page)}\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n          >\n            {page}\n          </Link>\n        </li>\n      ))}\n\n      <li className={`page-item ${lastPage && 'disabled'}`}>\n        <Link\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          to={pageNaming}\n          aria-disabled={lastPage}\n          onClick={() => onPageChange(currentPage + 1)}\n        >\n          »\n        </Link>\n      </li>\n    </ul>\n\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const total = 42;\n  const startingItem = currentPage * perPage - perPage + 1;\n  const endingItem = startingItem + perPage - 1 > total\n    ? total\n    : startingItem + perPage - 1;\n\n  const items = getNumbers(startingItem, endingItem);\n\n  const handlePerpage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(event.target.value));\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${items[0]} - ${items[items.length - 1]} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handlePerpage}\n            value={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => {\n          setCurrentPage(page);\n        }}\n      />\n      <ul>\n        {items.map(item => <li data-cy=\"item\" key={item}>{`Item ${item}`}</li>)}\n      </ul>\n\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>, document.getElementById('root'),\n);\n"],"sourceRoot":""}